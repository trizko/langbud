name: Run DB Migrations Downgrade

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run db migrations against'
        required: true
        type: choice
        options:
          - 'prod'
          - 'dev'
        default: 'dev'

jobs:
  run_db_migrations_down:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v4

      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install dbmt
        run: pip install git+https://github.com/trizko/dbmt

      - name: Add temporary firewall rule to allow Github Actions to connect to the database
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          # get db cluster id
          DB_CLUSTER_ID=$(doctl databases list | grep langbud-db-cluster-$ENVIRONMENT | awk '{print $1}')

          # get current ip address
          CURRENT_IP=$(curl -s ifconfig.me)

          # add temporary firewall rule
          doctl databases firewalls append $DB_CLUSTER_ID --rule ip_addr:$CURRENT_IP

      - name: Run DB Migrations
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          # get connection details for postgres db
          DB_ID=$(doctl databases list | grep langbud-db-cluster-$ENVIRONMENT | awk '{print $1}')
          DB_DATA_JSON=$(doctl databases get $DB_ID --output json)
          PG_URI=$(echo $DB_DATA_JSON | jq -r .[].connection.uri)

          # run db migrations
          dbmt down --db-url $PG_URI --migrations-dir ./migrations

      - name: Remove temporary firewall rule
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          # get db cluster id
          DB_CLUSTER_ID=$(doctl databases list | grep langbud-db-cluster-$ENVIRONMENT | awk '{print $1}')

          # get current ip address
          CURRENT_IP=$(curl -s ifconfig.me)

          # get firewall rule uuid
          FIREWALL_RULE_UUID=$(doctl databases firewalls list $DB_CLUSTER_ID | grep $CURRENT_IP | awk '{print $1}')

          # remove temporary firewall rule
          doctl databases firewalls remove $DB_CLUSTER_ID --uuid $FIREWALL_RULE_UUID